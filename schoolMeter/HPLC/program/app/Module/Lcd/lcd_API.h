//----------------------------------------------------------------------
//Copyright (C) 2003-2016 烟台东方威思顿电气股份有限公司电表软件研发部 
//创建人	马亮 张玉猛
//创建日期	2016-10-08
//描述		显示 Api头文件
//修改记录	
//----------------------------------------------------------------------

#ifndef __LCD_API_H
#define __LCD_API_H

//-----------------------------------------------
//				宏定义
//-----------------------------------------------
#if(MAX_PHASE == 3)	
#define MAX_LCD_KEY_ITEM		130	
#define MAX_LCD_LOOP_ITEM		99
#else
#define MAX_LCD_KEY_ITEM		99	
#define MAX_LCD_LOOP_ITEM		99
#endif

//-----------------------------------------------
//				结构体，共用体，枚举
//-----------------------------------------------
typedef struct TDisplayParaIndex_t
{
	//键显项
	BYTE KeyItem[MAX_LCD_KEY_ITEM][10];

	//循显项
	BYTE LoopItem[MAX_LCD_LOOP_ITEM][10];

}TDisplayItem;

typedef struct TLCDContinue_t
{
	TDisplayItem DisplayItem;

}TLcdConRom;

//故障及异常是否参与显示及光报警参数，同系统状态字位一一对应，上电时调到RAM中，掉电及参数改变时写入
typedef struct TWarnDispPara_t
{
	//故障参与LCD显示及点亮LED控制参数
	// 0 -- 报警继电器
	// 1 -- LCD小铃铛报警控制参数
	// 2 -- 液晶背光
	// 3 -- 液晶ERR显示报警
	BYTE WarnLcdDisp[4][MAX_WARN_ERR_NUM];
	
	DWORD CRC32;
	
}TWarnDispPara;

typedef struct TLCDSafe_t
{
	//下标：0 -- LCD小铃铛报警控制参数  1 -- 液晶背光	2 -- 液晶ERR显示报警  3 -- 报警继电器
	TWarnDispPara WarnDispPara;

}TLcdSafeRom;


//按键检测计数器
typedef struct TLcdKeyDetTimer_t
{
	WORD UpKey;					//上键检测计数器
	WORD DownKey;				//下键检测计数器
	WORD UpDownKey;				//双键检测计数器
	
}TLcdKeyDetTimer;
//按键类型
enum
{
	eUpKey=0,					//上翻键
	eDownKey,					//下翻键
	eUpDownKey,					//双键
	eKeyInValid,				//无效按键
};

//-----------------------------------------------
//				变量声明
//-----------------------------------------------
//按键检测计数器
extern TLcdKeyDetTimer LcdKeyDetTimer;


//-----------------------------------------------
// 				函数声明
//-----------------------------------------------



//-----------------------------------------------
// 				函数声明
//-----------------------------------------------

//-----------------------------------------------
//函数功能: 设置显示项目
//
//参数:		Type[in]		0--循显   1--键显
//			ItemOrder[in]   显示项目序号
//			OadNum        	OAD的个数(1 or 2)
//			*OADBuf		    OAD数据指针(字节顺序 高在前，低在后)
//			SubIndex		分屏号  1--第一屏  2--第二屏					
//返回值:	
//		   	TRUE/FALSE
//备注:返回两个OAD，若只有一个，则第二个OAD置为ff，后面为OadNum及屏号
//-----------------------------------------------
BOOL api_WriteLcdItem(BYTE Type, WORD ItemOrder, BYTE OadNum, BYTE *OADBuf, BYTE SubIndex);

//-----------------------------------------------
//函数功能: 读取显示项目
//
//参数:		Type[in]		0--循显   1--键显
//			ItemOrder[in]   显示项目序号
//			*OADBuf		    OAD数据指针(字节顺序 高在前，低在后)					
//返回值:	
//		   	TRUE/FALSE
//备注:返回两个OAD，若只有一个，则第二个OAD置为ff，后面为OadNum及屏号
//-----------------------------------------------
BOOL api_ReadLcdItem( BYTE Type, WORD ItemOrder, BYTE *OADBuf );

//-----------------------------------------------
//函数功能: 读写无线信号强度
//
//参数:		Operation[in]	READ/WRITE
//			Buf[in]			信号强度，1字节
//返回值:	
//			TRUE/FALSE
//备注:  
//-----------------------------------------------
BOOL api_ProcLcdWirelessPara(BYTE Operation,BYTE *Buf);

//-----------------------------------------------
//函数功能: 置位通讯标志
//
//参数: Type[in]	eRS485_I       	485通道
//					eIR				红外通道
//					eCR				载波通道
//					eRS485_II		第二路485通道                   
//返回值:	无
//			
//备注:   
//-----------------------------------------------
void api_SetLcdCommunicationFlag(BYTE Type);

//-----------------------------------------------
//函数功能: 规约控制液晶显示的切换
//
//参数: 	CommKeyType[in]	eUpKey/eDownKey
//			
//返回值:	无	
//			
//备注:  只支持键显的上翻和下翻查看(和魏工确认过了)
//-----------------------------------------------
void api_ProcLcdCommKey(BYTE CommKeyType);

//-----------------------------------------------
//函数功能: 显示校表ADJUST
//
//参数: 	无
//                    
//返回值:	无
//
//备注:
//-----------------------------------------------
void api_DisplayAdjust(void);

//-----------------------------------------------
//函数功能: 在液晶上显示断言 A-XXXXXX  
//
//参数: 
//			LineNum[in]--断言所在的行号
// 				   
//返回值:	 
//
//使用举例:	 api_DisplayAssert(12345); 		//显示"  A-012345  "
//-----------------------------------------------
void api_DisplayAssert(WORD LineNum);

//-----------------------------------------------
//函数功能: 插入显示信息
//
//参数:		InOADNum[in]	OAD个数
//			OADBuf[in]		OAD指针
//			SubIndex[in]	0--不需要分屏  1--第一屏  2--第二屏	
//			EchoTimer[in]	遥控液晶显示时间
//返回值:	TRUE
//		   
//备注:
//-----------------------------------------------
WORD api_WriteLcdEchoInfo(BYTE InOADNum, BYTE *OADBuf, BYTE SubIndex ,WORD EchoTimer);

//-----------------------------------------------
//函数功能: 读取设置液晶的显示、小铃铛、ERR显示、继电器控制参数
//
//参数:		Operation[in]	READ/WRITE
//			Type[in]		0--报警继电器
// 							1--LCD小铃铛报警控制参数
// 							2--液晶背光
// 							3--液晶ERR显示报警
//			Len[in]			数据长度
//			pBuf[in]		读或写的数据缓存
//返回值:	TRUE/False
//	
//备注: 
//-----------------------------------------------
BOOL api_ProcLcdCtrlPara(BYTE Operation,BYTE Type,BYTE Len,BYTE * pBuf);

#if( PREPAY_MODE == PREPAY_LOCAL )
//-----------------------------------------------
//函数功能: 读卡成功,蜂鸣器长鸣630ms;失败短鸣130ms三次，间隔130ms
//
//参数:		无
//
//返回值:	    插卡成功或失败2s内执行一次
//
//备注:
//-----------------------------------------------
void api_BeepReadCard( void );

//-----------------------------------------------
//函数功能: 读卡状态、剩余金额、错误信息显示
//
//参数:       Step[IN]     00:读卡中   03:用户卡    02:预置卡
//
//          ErrReg[IN]   00:插卡成功       其他为失败
//          Balance[IN]  插卡前剩余金额
//返回值:
//			无
//备注:
//-----------------------------------------------
void api_ReadCardDisplay(BYTE Step, BYTE ErrReg, long Balance);

#endif  //#if( PREPAY_MODE == PREPAY_LOCAL )

//-----------------------------------------------
//函数功能: 液晶大循环任务
//
//参数: 	无
//			
//返回值:	无	
//			
//备注: 
//-----------------------------------------------
void api_LcdTask(void);

//-----------------------------------------------
//函数功能: 液晶显示初始化
//
//参数:    
//Type  	Type[in]	ePowerOnMode	上电初始化LCD
//	     				ePowerDownMode	低功耗处理LCD                   
//返回值:	无
//
//备注:  
//-----------------------------------------------
void api_PowerUpLcd(ePOWER_MODE Type);

//-----------------------------------------------
//函数功能: 掉电液晶处理
//
//参数:		无
//                    
//返回值:	无
//
//备注:  
//-----------------------------------------------
void api_PowerDownLcd(void);

//-----------------------------------------------
//函数功能: 厂内电表初始化任务
//
//参数:		无
//						
//返回值:	无
//		   
//备注:
//-----------------------------------------------
void api_FactoryInitLcd(void);
//-----------------------------------------------
//函数功能: 重置借位功能
//
//参数:		Type		0：重置后从第一屏开始   
//						1：重置电能小数点数
//
//返回值:	
//		   	TRUE/FALSE
//备注:返回两个OAD，若只有一个，则第二个OAD置为ff，后面为OadNum及屏号
//-----------------------------------------------
void api_ResetBorrDotNum(BYTE type);

//-----------------------------------------------
//函数功能: 退出全显模式
//
//参数:		无
//                    
//返回值:	无
//
//备注:  场内退出全显，进入键显，并且关闭背光灯
//-----------------------------------------------
void api_LcdQuitAllDisplay(void);

//-----------------------------------------------
//函数功能: 奇偶屏检查
//
//参数:		Type:0-CPU管脚第一屏，1-CPU管脚第二屏
//               2-LCD管脚第一屏，3-LCD管脚第二屏
//			Timer:显示时间，单位秒，最大255
//返回值:	无
//
//备注:用于检查CPU或LCD相邻管脚是否有焊锡导致短接
//-----------------------------------------------
void api_CheckDispPin(BYTE Type, BYTE Timer);

#endif	//#ifndef __LCD_API_H

